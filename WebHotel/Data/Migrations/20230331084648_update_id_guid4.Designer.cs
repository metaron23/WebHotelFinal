// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebHotel.Data;

#nullable disable

namespace WebHotel.Data.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20230331084648_update_id_guid4")]
    partial class update_id_guid4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CMND")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmountUse")
                        .HasColumnType("int");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<int>("DiscountTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsPermanent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC07023FEEE8");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex(new[] { "DiscountCode" }, "Discount_DiscountCode")
                        .IsUnique();

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.DiscountReservationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC073350C584");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ReservationId");

                    b.ToTable("DiscountReservationDetail", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.DiscountRoomDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC078E422AFB");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("RoomId");

                    b.ToTable("DiscountRoomDetail", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.DiscountServiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC0758312396");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ServiceId");

                    b.ToTable("DiscountServiceDetail", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.DiscountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC077E70E0C3");

                    b.HasIndex(new[] { "Name" }, "DiscountType_Name")
                        .IsUnique();

                    b.ToTable("DiscountType", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.InvoiceReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmerId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("IssuedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("PaidAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("PriceReservedRoom")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<decimal?>("PriceService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(19, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__InvoiceR__3214EC0792A2C41D");

                    b.HasIndex("ConfirmerId");

                    b.HasIndex("ReservationId");

                    b.ToTable("InvoiceReservation", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.OrderService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ServiceRoomId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__OrderSer__3214EC076B892BFE");

                    b.HasIndex("ReservationId");

                    b.HasIndex("ServiceRoomId");

                    b.HasIndex("UserId");

                    b.ToTable("OrderService", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.Reservation", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("CreatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime>("DepositEndAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("DepositPrice")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ReservationPrice")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC077D5C0580");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservation", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ReservationChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdFather")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("ntext");

                    b.Property<string>("ReceiveUsername")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SendAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("SendUsername")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC07C34EF3BE");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationChat", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StatusNumber")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC07DDAE021A");

                    b.ToTable("ReservationStatus", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ReservationStatusEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ReservationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ReservationStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC075214B5A8");

                    b.HasIndex("ReservationId");

                    b.HasIndex("ReservationStatusId");

                    b.ToTable("ReservationStatusEvents");
                });

            modelBuilder.Entity("WebHotel.Model.Room", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<bool?>("GuestNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("('true')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoomPicture")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StarAmount")
                        .HasColumnType("int");

                    b.Property<float?>("StarSum")
                        .HasColumnType("real");

                    b.Property<int?>("StarValue")
                        .HasColumnType("int");

                    b.Property<byte[]>("UpdatedAt")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id")
                        .HasName("PK__Room__3214EC0771E8712D");

                    b.HasIndex("RoomTypeId");

                    b.HasIndex(new[] { "Name" }, "Room_Name")
                        .IsUnique();

                    b.HasIndex(new[] { "RoomNumber" }, "Room_RoomNumber")
                        .IsUnique();

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.RoomStar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__RoomStar__3214EC07E2560515");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomStart", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__RoomType__3214EC07B21F96D7");

                    b.HasIndex(new[] { "TypeName" }, "RoomType_TypeName")
                        .IsUnique();

                    b.ToTable("RoomType", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ServiceAttach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__ServiceA__3214EC0700176119");

                    b.HasIndex(new[] { "Name" }, "ServiceAttach_Name")
                        .IsUnique();

                    b.ToTable("ServiceAttach", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ServiceAttachDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceAttachId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__ServiceA__3214EC0778073DD2");

                    b.HasIndex("RoomTypeId");

                    b.HasIndex("ServiceAttachId");

                    b.ToTable("ServiceAttachDetail", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.ServiceRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Picture")
                        .HasColumnType("ntext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19, 2)");

                    b.Property<decimal?>("PriceDiscount")
                        .HasColumnType("decimal(19, 2)");

                    b.HasKey("Id")
                        .HasName("PK__ServiceR__3214EC0728E81D09");

                    b.HasIndex(new[] { "Name" }, "ServiceRoom_Name")
                        .IsUnique();

                    b.ToTable("ServiceRoom", (string)null);
                });

            modelBuilder.Entity("WebHotel.Model.TokenInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("Usename")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TokenInfo", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebHotel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebHotel.Model.Discount", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", "Creator")
                        .WithMany("Discounts")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FKDiscount927333");

                    b.HasOne("WebHotel.Model.DiscountType", "DiscountType")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountTypeId")
                        .IsRequired()
                        .HasConstraintName("FKDiscount61895");

                    b.Navigation("Creator");

                    b.Navigation("DiscountType");
                });

            modelBuilder.Entity("WebHotel.Model.DiscountReservationDetail", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", "Creator")
                        .WithMany("DiscountReservationDetails")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountRe595640");

                    b.HasOne("WebHotel.Model.Discount", "Discount")
                        .WithMany("DiscountReservationDetails")
                        .HasForeignKey("DiscountId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountRe678897");

                    b.HasOne("WebHotel.Model.Reservation", "Reservation")
                        .WithMany("DiscountReservationDetails")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountRe215096");

                    b.Navigation("Creator");

                    b.Navigation("Discount");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("WebHotel.Model.DiscountRoomDetail", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", "Creator")
                        .WithMany("DiscountRoomDetails")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountRo944649");

                    b.HasOne("WebHotel.Model.Discount", "Discount")
                        .WithMany("DiscountRoomDetails")
                        .HasForeignKey("DiscountId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountRo138607");

                    b.HasOne("WebHotel.Model.Room", "Room")
                        .WithMany("DiscountRoomDetails")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountRo29575");

                    b.Navigation("Creator");

                    b.Navigation("Discount");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("WebHotel.Model.DiscountServiceDetail", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", "Creator")
                        .WithMany("DiscountServiceDetails")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountSe833248");

                    b.HasOne("WebHotel.Model.Discount", "Discount")
                        .WithMany("DiscountServiceDetails")
                        .HasForeignKey("DiscountId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountSe250008");

                    b.HasOne("WebHotel.Model.ServiceRoom", "Service")
                        .WithMany("DiscountServiceDetails")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FKDiscountSe716587");

                    b.Navigation("Creator");

                    b.Navigation("Discount");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("WebHotel.Model.InvoiceReservation", b =>
                {
                    b.HasOne("WebHotel.Model.ApplicationUser", "Confirmer")
                        .WithMany("InvoiceReservations")
                        .HasForeignKey("ConfirmerId")
                        .IsRequired()
                        .HasConstraintName("FKInvoiceRes286606");

                    b.HasOne("WebHotel.Model.Reservation", "Reservation")
                        .WithMany("InvoiceReservations")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FKInvoiceRes190462");

                    b.Navigation("Confirmer");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("WebHotel.Model.OrderService", b =>
                {
                    b.HasOne("WebHotel.Model.Reservation", "Reservation")
                        .WithMany("OrderServices")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FKOrderServi258673");

                    b.HasOne("WebHotel.Model.ServiceRoom", "ServiceRoom")
                        .WithMany("OrderServices")
                        .HasForeignKey("ServiceRoomId")
                        .IsRequired()
                        .HasConstraintName("FKOrderServi447170");

                    b.HasOne("WebHotel.Model.ApplicationUser", "User")
                        .WithMany("OrderServices")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKOrderServi791508");

                    b.Navigation("Reservation");

                    b.Navigation("ServiceRoom");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebHotel.Model.Reservation", b =>
                {
                    b.HasOne("WebHotel.Model.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio111598");

                    b.HasOne("WebHotel.Model.ApplicationUser", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio38059");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebHotel.Model.ReservationChat", b =>
                {
                    b.HasOne("WebHotel.Model.Reservation", "Reservation")
                        .WithMany("ReservationChats")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio436575");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("WebHotel.Model.ReservationStatusEvent", b =>
                {
                    b.HasOne("WebHotel.Model.Reservation", "Reservation")
                        .WithMany("ReservationStatusEvents")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio37187");

                    b.HasOne("WebHotel.Model.ReservationStatus", "ReservationStatus")
                        .WithMany("ReservationStatusEvents")
                        .HasForeignKey("ReservationStatusId")
                        .IsRequired()
                        .HasConstraintName("FKReservatio956578");

                    b.Navigation("Reservation");

                    b.Navigation("ReservationStatus");
                });

            modelBuilder.Entity("WebHotel.Model.Room", b =>
                {
                    b.HasOne("WebHotel.Model.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FKRoom188940");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("WebHotel.Model.RoomStar", b =>
                {
                    b.HasOne("WebHotel.Model.Room", "Room")
                        .WithMany("RoomStarts")
                        .HasForeignKey("RoomId")
                        .IsRequired()
                        .HasConstraintName("FKRoomStart413566");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("WebHotel.Model.ServiceAttachDetail", b =>
                {
                    b.HasOne("WebHotel.Model.RoomType", "RoomType")
                        .WithMany("ServiceAttachDetails")
                        .HasForeignKey("RoomTypeId")
                        .IsRequired()
                        .HasConstraintName("FKServiceAtt405938");

                    b.HasOne("WebHotel.Model.ServiceAttach", "ServiceAttach")
                        .WithMany("ServiceAttachDetails")
                        .HasForeignKey("ServiceAttachId")
                        .IsRequired()
                        .HasConstraintName("FKServiceAtt700016");

                    b.Navigation("RoomType");

                    b.Navigation("ServiceAttach");
                });

            modelBuilder.Entity("WebHotel.Model.ApplicationUser", b =>
                {
                    b.Navigation("DiscountReservationDetails");

                    b.Navigation("DiscountRoomDetails");

                    b.Navigation("DiscountServiceDetails");

                    b.Navigation("Discounts");

                    b.Navigation("InvoiceReservations");

                    b.Navigation("OrderServices");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("WebHotel.Model.Discount", b =>
                {
                    b.Navigation("DiscountReservationDetails");

                    b.Navigation("DiscountRoomDetails");

                    b.Navigation("DiscountServiceDetails");
                });

            modelBuilder.Entity("WebHotel.Model.DiscountType", b =>
                {
                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("WebHotel.Model.Reservation", b =>
                {
                    b.Navigation("DiscountReservationDetails");

                    b.Navigation("InvoiceReservations");

                    b.Navigation("OrderServices");

                    b.Navigation("ReservationChats");

                    b.Navigation("ReservationStatusEvents");
                });

            modelBuilder.Entity("WebHotel.Model.ReservationStatus", b =>
                {
                    b.Navigation("ReservationStatusEvents");
                });

            modelBuilder.Entity("WebHotel.Model.Room", b =>
                {
                    b.Navigation("DiscountRoomDetails");

                    b.Navigation("Reservations");

                    b.Navigation("RoomStarts");
                });

            modelBuilder.Entity("WebHotel.Model.RoomType", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("ServiceAttachDetails");
                });

            modelBuilder.Entity("WebHotel.Model.ServiceAttach", b =>
                {
                    b.Navigation("ServiceAttachDetails");
                });

            modelBuilder.Entity("WebHotel.Model.ServiceRoom", b =>
                {
                    b.Navigation("DiscountServiceDetails");

                    b.Navigation("OrderServices");
                });
#pragma warning restore 612, 618
        }
    }
}
